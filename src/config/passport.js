import { ExtractJwt, Strategy as JwtStrategy } from 'passport-jwt'
import { Strategy as LocalStrategy } from 'passport-local'
import UsuariosServicios from '../services/usuarios.servicios.js'
import bcryptjs from 'bcryptjs'

process.loadEnvFile()

const estrategia = new LocalStrategy(
Â  {
Â  Â  usernameField: 'nombreUsuario',
Â  Â  passwordField: 'contrasenia'
Â  },
Â  async (nombreUsuario, contrasenia, done) => {
Â  Â  try {
Â  Â  Â  const usuariosServicios = new UsuariosServicios()
Â  Â  Â  const usuario = await usuariosServicios.buscarPorNombreUsuario(nombreUsuario)

Â  Â  Â  const esPassValido = await bcryptjs.compare(contrasenia, usuario.contrasenia)

Â  Â  Â  if (!usuario || !esPassValido) {
Â  Â  Â  Â  return done(null, false, {
Â  Â  Â  Â  Â  message: 'Nombre de usuario y/o contraseÃ±a incorrectos.'
Â  Â  Â  Â  })
Â  Â  Â  } else {
Â  Â  Â  Â  return done(null, usuario, { message: 'Login correcto!' })
Â  Â  Â  }
Â  Â  } catch (exc) {
Â  Â  Â  done(exc)
Â  Â  }
Â  }
)

const validacion = new JwtStrategy(
Â  {
Â  Â  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
Â  Â  secretOrKey: process.env.JWT_SECRET
Â  },
Â  async (jwtPayload, done) => {
Â  Â  try {
Â  Â  Â  console.log("--- PAYLOAD JWT RECIBIDO ---");
Â  Â  Â  console.log(jwtPayload); // ðŸ‘ˆ LINEA DE DEPURACIÃ“N CLAVE
Â  Â  Â  console.log("----------------------------");

Â  Â  Â  const service = new UsuariosServicios()
Â  Â  Â  
Â  Â  Â  // Verifica si la propiedad es 'usuarioId' o si es otra (ej: 'id', 'sub', 'uid')
Â  Â  Â  const idAUsar = jwtPayload.usuarioId; // PodrÃ­a ser otra propiedad

Â  Â  Â  if (!idAUsar) {
Â  Â  Â  Â  // Si no hay ID, falla antes de llamar a la DB
Â  Â  Â  Â  return done(null, false, { message: 'Token no contiene ID de usuario.' });
Â  Â  Â  }
Â  Â  Â  
Â  Â  Â  const usuario = await service.buscarPorId(idAUsar)
Â  Â  Â  
Â  Â  Â  if (usuario) {
Â  Â  Â  Â  return done(null, usuario)
Â  Â  Â  } else {
Â  Â  Â  Â  return done(null, false, { message: 'Usuario no encontrado.' })
Â  Â  Â  }
Â  Â  } catch (error) {
Â  Â  Â  // El error que te estÃ¡ saliendo
Â  Â  Â  console.error("Error en JwtStrategy:", error); 
Â  Â  Â  return done(error, false, { message: 'Error interno al validar el token' })
Â  Â  }
Â  }
)

export { estrategia, validacion }
